<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label2.Text" xml:space="preserve">
    <value>This wizard calibrates the PICkit 2 VDD to provide better
accuracy in both setting the PICkit 2 VDD output voltage and
reading target voltages.  A Voltage Meter is required for 
calibration.  Additionally, a name or identification string may
be assigned to the PICkit 2 unit.

It is important to note that the PICkit 2 references all voltages to
the USB port voltage.  Therefore, the calibration is ONLY valid
for the USB port on which is it run.  Moving the PICkit 2 to
another USB port or PC may cause it to need to be recalibrated.

The calibration is stored in the PICkit 2 unit, so it will remain
calibrated when used with MPLAB.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhTgB0AIcAAAAAAAEBAQICAgMDAwQEBAUFBQYGBgcHBwgICAkJCQoKCgsLCwwMDA0NDQ4ODg8P
        DxAQEBISEhQUFBUVFRYWFhcXFxgYGBkZGRoaGhsbGxwcHB4eHh8fHyAgICEhISIiIiQkJCUlJSYmJicn
        JygoKCkpKSoqKisrKy0tLS4uLi8vLzAwMDExMTIyMjQ0NDU1NTc3Nzg4ODk5OTo6Ojs7Ozw8PD09PT4+
        Pj8/P0BAQEFBQUJCQkNDQ0REREVFRUZGRkdHR0hISElJSUpKSkxMTP8AAE9PT1BQUFFRUVJSUlNTU1RU
        VFVVVVZWVlhYWF1dXV5eXl9fX2BgYGJiYmRkZGVlZWhoaGlpaWtra21tbXBwcHh4eHp6ent7e35+fn9/
        f4GBgYSEhIaGhoeHh4iIiIyMjI6Ojo+Pj5CQkJSUlJaWlpeXl5mZmZubm52dnZ+fn6Ojo6SkpKampqen
        p6ioqK2tra6urq+vr7KysrOzs7W1tba2tre3t7i4uLm5ubu7u7y8vL29vb6+vr+/v8DAwMHBwcLCwsPD
        w8TExMbGxsfHx8nJycvLy8zMzM7Ozs/Pz9HR0dLS0tPT09TU1NXV1dbW1tfX19zc3N3d3d7e3t/f3+Dg
        4OHh4eLi4uPj4+Xl5efn5+jo6Onp6e3t7e7u7u/v7/Dw8PHx8fLy8vPz8/T09PX19fb29vf39/j4+Pn5
        +fr6+vv7+/z8/P39/f7+/v//////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAATgB0AAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        DvzyRaLFixYpWsmRowYAC0cwihzJ0IqFGCRTqhyopYOWlTBFniFRMabNiF9I3Nz5MAjPnwu1WAFK9KDP
        okgF5kia1AnToi+fEj0q9afOqjzPRMV6cwVXniG/2vQq1qaUsjEhoIW5dK3KMW5XJombEgRdkh3ujmyr
        9+LZvhe3AL74ZQUAAAhQIFi8mCCAwQS/PD5YYeBhqQAUkDgDUTJCFAIfT2Z6GMABBhi6NPR8EIZjzKUP
        E3gg4YpC1gYRvH4auzcAAmoP4i6o2zJs3wwOkBU+mvhu0rEdINDBcDjBq6FhQ0iw5KH1gQfE/v+AIrGw
        78MDLF8+WHygbsbt4f+UXKS+/fqTRzd37zy+QP870Xeffe0Zxx5//xT4HkEFwiTggEWAVtB+CCb4H4MW
        VhjTgwM2SCGGIF6oYIAAQFhfgR9iCKCIIW5YoontpehchcWtaBOH90nYm0IKMuaejzzhSCBkCJl3ngXq
        yfhPaQZmF9t85x02QXZUGqRfaFdeSWKUFH7o5ZJOPucil46l+GV+YDY5ZpRWHqTfZWiKJqaDXHbp5oRp
        ytmckiJJRmaagOJJ5ZuA8tlnnUkqxGSVYD4ZJAJRBkdkQYUhtByjgH3H6HqQaVpooJmaaZyhaHmKJqh9
        mYrlooOpOmeqor7NqtcXkJ4n6aQTXUrQco62GiuqoSJ0Kq6u9uqrsG12+quasCL7qbLOLslpq7X6diuu
        /1R6EK/TBnugtJjOmqII4R57UAurklqWpzoyKy5CxWlpbm5VqvuVpzF2m2q1vTVIbE3YLiSFHAEzRFXB
        CemKsEFILpxQww4b9MZfERcUVsUFXYvxPwdvPNTGu4I80MUid4yxwhXDJbJAJG+M0sooR/yyyDNvfEbL
        FdeM8RF8YWxFXhtLAYHORFJkdBA5kADBFA4bTdHKUEct9dQBAQA7
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhTgB0AIcAAAAAAAEBAQICAgMDAwQEBAUFBQYGBgcHBwgICAkJCQoKCgsLCwwMDA0NDQ4ODg8P
        DxAQEBISEhQUFBUVFRYWFhcXFxgYGBkZGRoaGhsbGxwcHB4eHh8fHyAgICEhISIiIiQkJCUlJSYmJicn
        JygoKCkpKSoqKisrKy0tLS4uLi8vLzAwMDExMTIyMjQ0NDU1NTc3Nzg4ODk5OTo6Ojs7Ozw8PD09PT4+
        Pj8/P0BAQEFBQUJCQkNDQ0REREVFRUZGRkdHR0hISElJSUpKSkxMTP8AAE9PT1BQUFFRUVJSUlNTU1RU
        VFVVVVZWVlhYWF1dXV5eXl9fX2BgYGJiYmRkZGVlZWhoaGlpaWtra21tbXBwcHh4eHp6ent7e35+fn9/
        f4GBgYSEhIaGhoeHh4iIiIyMjI6Ojo+Pj5CQkJSUlJaWlpeXl5mZmZubm52dnZ+fn6Ojo6SkpKampqen
        p6ioqK2tra6urq+vr7KysrOzs7W1tba2tre3t7i4uLm5ubu7u7y8vL29vb6+vr+/v8DAwMHBwcLCwsPD
        w8TExMbGxsfHx8nJycvLy8zMzM7Ozs/Pz9HR0dLS0tPT09TU1NXV1dbW1tfX19zc3N3d3d7e3t/f3+Dg
        4OHh4eLi4uPj4+Xl5efn5+jo6Onp6e3t7e7u7u/v7/Dw8PHx8fLy8vPz8/T09PX19fb29vf39/j4+Pn5
        +fr6+vv7+/z8/P39/f7+/v//////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAATgB0AAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        DvzyRaLFixYpWsmRowYAC0cwihzJ0IqFGCRTqhyopYOWlTBFniFRMabNiF9I3Nz5MAjPnwu1WAFK9KDP
        okgF5kia1AnToi+fEj0q9afOqjzPRMV6cwVXniG/2vQq1qaUsjEhoIW5dK3KMW5XJombEgRdkh3ujmyr
        9+LZvhe3AL74ZQUAAAhQIFi8mCCAwQS/PD5YYeBhqQAUkDgDUTJCFAIfT2Z6GMABBhi6NPR8EIZjzKUP
        E3gg4YpC1gYRvH4auzcAAmoP4i6o2zJs3wwOkBU+mvhu0rEdINDBcDjBq6FhQ0iw5KH1gQfE/v+AIrGw
        78MDLF8+WHygbsbt4f+UXKS+/fqTRzd37zy+QP870Xeffe0Zxx5//xT4HkEFwiTggEWAVtB+CCb4H4MW
        VhjTgwM2SCGGIF6oYIAAQFhfgR9iCKCIIW5YoontpehchcWtaBOH90nYm0IKMuaejzzhSCBkCJl3ngXq
        yfhPaQZmF9t85x02QXZUGqRfaFdeSWKUFH7o5ZJOPucil46l+GV+YDY5ZpRWHqTfZWiKJqaDXHbp5oRp
        ytmckiJJRmaagOJJ5ZuA8tlnnUkqxGSVYD4ZJAJRBkdkQYUhtByjgH3H6HqQaVpooJmaaZyhaHmKJqh9
        mYrlooOpOmeqor7NqtcXkJ4n6aQTXUrQco62GiuqoSJ0Kq6u9uqrsG12+quasCL7qbLOLslpq7X6diuu
        /1R6EK/TBnugtJjOmqII4R57UAurklqWpzoyKy5CxWlpbm5VqvuVpzF2m2q1vTVIbE3YLiSFHAEzRFXB
        CemKsEFILpxQww4b9MZfERcUVsUFXYvxPwdvPNTGu4I80MUid4yxwhXDJbJAJG+M0sooR/yyyDNvfEbL
        FdeM8RF8YWxFXhtLAYHORFJkdBA5kADBFA4bTdHKUEct9dQBAQA7
</value>
  </data>
  <data name="label15.Text" xml:space="preserve">
    <value>You may give the PICkit unit an identification string of
up to 14 characters.  It will be displayed when this
application connects to the PICkit and in the title bar
of the main form.

This identification string is not used by the application at
all and is provided solely for the user to identify different
PICkit units.
</value>
  </data>
</root>